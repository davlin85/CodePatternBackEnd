// <auto-generated />
using DataStorageAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataStorageAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221220174633_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.CategoryEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Jackets"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Jeans"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Shoes"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Watches"
                        });
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.JacketEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackWidth")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Cut")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Fit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProductDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductItemsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("ProductDetailsId");

                    b.HasIndex("ProductItemsId");

                    b.ToTable("Jackets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackWidth = "76 cm",
                            CategoriesId = 1,
                            Cut = "Straight",
                            Fit = "Regular Fit",
                            Length = "Normal Length",
                            ProductDetailsId = 1,
                            ProductItemsId = 1
                        },
                        new
                        {
                            Id = 2,
                            BackWidth = "82 cm",
                            CategoriesId = 1,
                            Cut = "Straight",
                            Fit = "Regular Fit",
                            Length = "Normal Length",
                            ProductDetailsId = 2,
                            ProductItemsId = 2
                        },
                        new
                        {
                            Id = 3,
                            BackWidth = "120 cm",
                            CategoriesId = 1,
                            Cut = "Normal Cut",
                            Fit = "Loose Fit",
                            Length = "Loose Length",
                            ProductDetailsId = 3,
                            ProductItemsId = 3
                        },
                        new
                        {
                            Id = 4,
                            BackWidth = "80 cm",
                            CategoriesId = 1,
                            Cut = "Normal Cut",
                            Fit = "Straight Fit",
                            Length = "Normal Length",
                            ProductDetailsId = 4,
                            ProductItemsId = 4
                        });
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.JeansEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Closure")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Fit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Pockets")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProductDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductItemsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("ProductDetailsId");

                    b.HasIndex("ProductItemsId");

                    b.ToTable("Jeans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriesId = 2,
                            Closure = "Normal Closure",
                            Fit = "Skinny Fit",
                            Pockets = "4 pockets",
                            ProductDetailsId = 5,
                            ProductItemsId = 5
                        },
                        new
                        {
                            Id = 2,
                            CategoriesId = 2,
                            Closure = "Normal Closure",
                            Fit = "Loose Fit",
                            Pockets = "4 pockets",
                            ProductDetailsId = 6,
                            ProductItemsId = 6
                        },
                        new
                        {
                            Id = 3,
                            CategoriesId = 2,
                            Closure = "Normal Closure",
                            Fit = "Straight Fit",
                            Pockets = "N4 Pockets",
                            ProductDetailsId = 7,
                            ProductItemsId = 7
                        },
                        new
                        {
                            Id = 4,
                            CategoriesId = 2,
                            Closure = "Normal Closure",
                            Fit = "Stretch Fit",
                            Pockets = "4 Pockets",
                            ProductDetailsId = 8,
                            ProductItemsId = 8
                        });
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.ProductDetailEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(1,0)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Black",
                            Price = 800m,
                            Quantity = 25m,
                            Rating = 5m,
                            Size = "M"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Blue",
                            Price = 500m,
                            Quantity = 120m,
                            Rating = 2m,
                            Size = "XL"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Green",
                            Price = 900m,
                            Quantity = 200m,
                            Rating = 1m,
                            Size = "L"
                        },
                        new
                        {
                            Id = 4,
                            Color = "Yellow",
                            Price = 600m,
                            Quantity = 12m,
                            Rating = 5m,
                            Size = "S"
                        },
                        new
                        {
                            Id = 5,
                            Color = "Blue",
                            Price = 1200m,
                            Quantity = 29m,
                            Rating = 5m,
                            Size = "M"
                        },
                        new
                        {
                            Id = 6,
                            Color = "Purple",
                            Price = 1100m,
                            Quantity = 30m,
                            Rating = 3m,
                            Size = "XL"
                        },
                        new
                        {
                            Id = 7,
                            Color = "Green",
                            Price = 1900m,
                            Quantity = 11m,
                            Rating = 5m,
                            Size = "XXL"
                        },
                        new
                        {
                            Id = 8,
                            Color = "Black",
                            Price = 2500m,
                            Quantity = 26m,
                            Rating = 4m,
                            Size = "S"
                        },
                        new
                        {
                            Id = 9,
                            Color = "Red, Yellow, Purple",
                            Price = 5000m,
                            Quantity = 12m,
                            Rating = 5m,
                            Size = "44"
                        },
                        new
                        {
                            Id = 10,
                            Color = "Green, Purple, Pink",
                            Price = 5000m,
                            Quantity = 22m,
                            Rating = 5m,
                            Size = "44"
                        },
                        new
                        {
                            Id = 11,
                            Color = "Green, Purple, Red",
                            Price = 5000m,
                            Quantity = 33m,
                            Rating = 5m,
                            Size = "46"
                        },
                        new
                        {
                            Id = 12,
                            Color = "Green, Purple, Pink",
                            Price = 5000m,
                            Quantity = 21m,
                            Rating = 5m,
                            Size = "42"
                        },
                        new
                        {
                            Id = 13,
                            Color = "Black",
                            Price = 650m,
                            Quantity = 8m,
                            Rating = 3m,
                            Size = "One Size"
                        },
                        new
                        {
                            Id = 14,
                            Color = "Green",
                            Price = 650m,
                            Quantity = 12m,
                            Rating = 4m,
                            Size = "One Size"
                        },
                        new
                        {
                            Id = 15,
                            Color = "Red",
                            Price = 650m,
                            Quantity = 29m,
                            Rating = 4m,
                            Size = "One Size"
                        },
                        new
                        {
                            Id = 16,
                            Color = "Purple",
                            Price = 650m,
                            Quantity = 32m,
                            Rating = 3m,
                            Size = "One Size"
                        });
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.ProductItemEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleNumber = "1111-11",
                            BrandName = "Vans",
                            ProductName = "Vans Jacket",
                            ShortDescription = "New Jacket from Vans"
                        },
                        new
                        {
                            Id = 2,
                            ArticleNumber = "2222-11",
                            BrandName = "Nike",
                            ProductName = "Nike Jacket",
                            ShortDescription = "New Jacket from Nike"
                        },
                        new
                        {
                            Id = 3,
                            ArticleNumber = "3333-11",
                            BrandName = "Adidas",
                            ProductName = "Adidas Jacket",
                            ShortDescription = "New Jacket from Adidas"
                        },
                        new
                        {
                            Id = 4,
                            ArticleNumber = "4444-11",
                            BrandName = "Reebok",
                            ProductName = "Reebok Jacket",
                            ShortDescription = "New Jacket from Reebok"
                        },
                        new
                        {
                            Id = 5,
                            ArticleNumber = "5555-11",
                            BrandName = "Vans ",
                            ProductName = "Vans Jeans",
                            ShortDescription = "New Jeans from Vans"
                        },
                        new
                        {
                            Id = 6,
                            ArticleNumber = "6666-11",
                            BrandName = "Nike",
                            ProductName = "Nike Jeans",
                            ShortDescription = "New Jeans from Nike"
                        },
                        new
                        {
                            Id = 7,
                            ArticleNumber = "7777-11",
                            BrandName = "Adidas",
                            ProductName = "Adidas Jeans",
                            ShortDescription = "New Jeans from Adidas"
                        },
                        new
                        {
                            Id = 8,
                            ArticleNumber = "8888-11",
                            BrandName = "Reebook",
                            ProductName = "Reebook Jacket",
                            ShortDescription = "New Jacket from Reebook"
                        },
                        new
                        {
                            Id = 9,
                            ArticleNumber = "9999-11",
                            BrandName = "Vans",
                            ProductName = "Vans Shoes",
                            ShortDescription = "New Shoes from Vans"
                        },
                        new
                        {
                            Id = 10,
                            ArticleNumber = "2222-22",
                            BrandName = "Nike",
                            ProductName = "Nike Shoes",
                            ShortDescription = "New Shoes from Nike"
                        },
                        new
                        {
                            Id = 11,
                            ArticleNumber = "3333-22",
                            BrandName = "Adidas",
                            ProductName = "Adidas Shoes",
                            ShortDescription = "New Shoes from Adidas"
                        },
                        new
                        {
                            Id = 12,
                            ArticleNumber = "4444-22",
                            BrandName = "Reebook",
                            ProductName = "Reebook Shoes",
                            ShortDescription = "New Shoes from Reebook"
                        },
                        new
                        {
                            Id = 13,
                            ArticleNumber = "5555-22",
                            BrandName = "Reebook",
                            ProductName = "Reebook Watch",
                            ShortDescription = "New Watch from Reebook"
                        },
                        new
                        {
                            Id = 14,
                            ArticleNumber = "6666-22",
                            BrandName = "Nike",
                            ProductName = "Nike Watch",
                            ShortDescription = "New Watch from Reebook"
                        },
                        new
                        {
                            Id = 15,
                            ArticleNumber = "7777-22",
                            BrandName = "Adidas",
                            ProductName = "Adidas Watch",
                            ShortDescription = "New Watch from Adidas"
                        },
                        new
                        {
                            Id = 16,
                            ArticleNumber = "8888-22",
                            BrandName = "Vans",
                            ProductName = "Vans Watch",
                            ShortDescription = "New Watch from Vans"
                        });
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.ShoesEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Closure")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Insole")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Lining")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProductDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductItemsId")
                        .HasColumnType("int");

                    b.Property<string>("Sole")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("ProductDetailsId");

                    b.HasIndex("ProductItemsId");

                    b.ToTable("Shoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriesId = 3,
                            Closure = "Normal Closure",
                            Insole = "Textile",
                            Lining = "Leather",
                            ProductDetailsId = 9,
                            ProductItemsId = 9,
                            Sole = "Art materials"
                        },
                        new
                        {
                            Id = 2,
                            CategoriesId = 3,
                            Closure = "Normal Closure",
                            Insole = "Textile",
                            Lining = "Leather",
                            ProductDetailsId = 10,
                            ProductItemsId = 10,
                            Sole = "Art materials"
                        },
                        new
                        {
                            Id = 3,
                            CategoriesId = 3,
                            Closure = "Normal Closure",
                            Insole = "Textile",
                            Lining = "Leather",
                            ProductDetailsId = 11,
                            ProductItemsId = 11,
                            Sole = "Art materials"
                        },
                        new
                        {
                            Id = 4,
                            CategoriesId = 3,
                            Closure = "Normal Closure",
                            Insole = "Textile",
                            Lining = "Leather",
                            ProductDetailsId = 12,
                            ProductItemsId = 12,
                            Sole = "Art materials"
                        });
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.WatchEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("ClockWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Closure")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProductDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductItemsId")
                        .HasColumnType("int");

                    b.Property<string>("Waterproof")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("ProductDetailsId");

                    b.HasIndex("ProductItemsId");

                    b.ToTable("Watches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriesId = 4,
                            ClockWork = "Normal ClockWork",
                            Closure = "Normal Closure",
                            Display = "Digital",
                            ProductDetailsId = 13,
                            ProductItemsId = 13,
                            Waterproof = "Yes"
                        },
                        new
                        {
                            Id = 2,
                            CategoriesId = 4,
                            ClockWork = "Normal ClockWork",
                            Closure = "Normal Closure",
                            Display = "Digital",
                            ProductDetailsId = 14,
                            ProductItemsId = 14,
                            Waterproof = "Yes"
                        },
                        new
                        {
                            Id = 3,
                            CategoriesId = 4,
                            ClockWork = "Normal ClockWork",
                            Closure = "Normal Closure",
                            Display = "Digital",
                            ProductDetailsId = 15,
                            ProductItemsId = 15,
                            Waterproof = "Yes"
                        },
                        new
                        {
                            Id = 4,
                            CategoriesId = 4,
                            ClockWork = "Normal ClockWork",
                            Closure = "Normal Closure",
                            Display = "Digital",
                            ProductDetailsId = 16,
                            ProductItemsId = 16,
                            Waterproof = "Yes"
                        });
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.JacketEntityModel", b =>
                {
                    b.HasOne("DataStorageAPI.Models.EntityModels.CategoryEntityModel", "Categories")
                        .WithMany("Jackets")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductDetailEntityModel", "ProductDetails")
                        .WithMany("Jackets")
                        .HasForeignKey("ProductDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductItemEntityModel", "ProductItems")
                        .WithMany("Jackets")
                        .HasForeignKey("ProductItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("ProductDetails");

                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.JeansEntityModel", b =>
                {
                    b.HasOne("DataStorageAPI.Models.EntityModels.CategoryEntityModel", "Categories")
                        .WithMany("Jeans")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductDetailEntityModel", "ProductDetails")
                        .WithMany("Jeans")
                        .HasForeignKey("ProductDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductItemEntityModel", "ProductItems")
                        .WithMany("Jeans")
                        .HasForeignKey("ProductItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("ProductDetails");

                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.ShoesEntityModel", b =>
                {
                    b.HasOne("DataStorageAPI.Models.EntityModels.CategoryEntityModel", "Categories")
                        .WithMany("Shoes")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductDetailEntityModel", "ProductDetails")
                        .WithMany("Shoes")
                        .HasForeignKey("ProductDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductItemEntityModel", "ProductItems")
                        .WithMany("Shoes")
                        .HasForeignKey("ProductItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("ProductDetails");

                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.WatchEntityModel", b =>
                {
                    b.HasOne("DataStorageAPI.Models.EntityModels.CategoryEntityModel", "Categories")
                        .WithMany("Watches")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductDetailEntityModel", "ProductDetails")
                        .WithMany("Watches")
                        .HasForeignKey("ProductDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStorageAPI.Models.EntityModels.ProductItemEntityModel", "ProductItems")
                        .WithMany("Watches")
                        .HasForeignKey("ProductItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("ProductDetails");

                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.CategoryEntityModel", b =>
                {
                    b.Navigation("Jackets");

                    b.Navigation("Jeans");

                    b.Navigation("Shoes");

                    b.Navigation("Watches");
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.ProductDetailEntityModel", b =>
                {
                    b.Navigation("Jackets");

                    b.Navigation("Jeans");

                    b.Navigation("Shoes");

                    b.Navigation("Watches");
                });

            modelBuilder.Entity("DataStorageAPI.Models.EntityModels.ProductItemEntityModel", b =>
                {
                    b.Navigation("Jackets");

                    b.Navigation("Jeans");

                    b.Navigation("Shoes");

                    b.Navigation("Watches");
                });
#pragma warning restore 612, 618
        }
    }
}
